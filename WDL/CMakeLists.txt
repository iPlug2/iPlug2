cmake_minimum_required(VERSION 3.17)
include_guard(GLOBAL)

add_library(WDL STATIC)


target_compile_options(WDL
    PRIVATE
        $<$<CXX_COMPILER_ID:MSVC>:
            /wd4100                 # 'identifier' : unreferenced formal parameter
            /wd5105                 # macro expansion producing 'defined' has undefined behavior
        >
)


target_include_directories(WDL
    PRIVATE
        # "cmath"
        # "eel2"
        # "giflib"
        # "gpu"
        # "jnetlib"
        # "jpeglib"
        "libpng"
        # "lice"
        # "localize"
        # "nsv"
        # "plush2"
        # "sc_bounce"
        # "swell"
        # "tinyxml"
        # "win32_curses"
        # "wingui"
        "zlib"
)

target_sources(WDL
    PRIVATE
        # "adpcm_decode.h"
        # "adpcm_encode.h"
        # "assocarray.h"
        # "audiobuffercontainer.cpp"
        # "audiobuffercontainer.h"
        # "besselfilter.cpp"
        # "besselfilter.h"
        # "bitfield.h"
        # "blowfish.c"
        # "blowfish.h"
        # "chunkalloc.h"
        # "circbuf.h"
        # "cmath/bessel_polynomial.h"
        # "cmath/complex_number.h"
        # "cmath/custom_math.h"
        # "cmath/durand_kerner.h"
        # "cmath/factorial.h"
        # "cmath/horner.h"
        # "cmath/test_bessel.c"
        # "cmath/test_eval.c"
        # "convoengine.cpp"
        # "convoengine.h"
        # "db2val.h"
        "denormal.h"
        # "des.cpp"
        # "des.h"
        # "destroycheck.h"
        # "diffcalc.h"
        "dirscan.h"
        # "eel2/asm-nseel-aarch64-gcc.c"
        # "eel2/asm-nseel-arm-gcc.c"
        # "eel2/asm-nseel-ppc-gcc.c"
        # "eel2/asm-nseel-x86-gcc.c"
        # "eel2/asm-nseel-x86-msvc.c"
        # "eel2/eel_atomic.h"
        # "eel2/eel_eval.h"
        # "eel2/eel_fft.h"
        # "eel2/eel_files.h"
        # "eel2/eel_import.h"
        # "eel2/eel_lice.h"
        # "eel2/eel_mdct.h"
        # "eel2/eel_misc.h"
        # "eel2/eel_net.h"
        # "eel2/eel_strings.h"
        # "eel2/eelscript.h"
        # "eel2/glue_aarch64.h"
        # "eel2/glue_arm.h"
        # "eel2/glue_port.h"
        # "eel2/glue_port_new.h"
        # "eel2/glue_ppc.h"
        # "eel2/glue_x86.h"
        # "eel2/glue_x86_64.h"
        # "eel2/loose_eel.cpp"
        # "eel2/ns-eel.h"
        # "eel2/ns-eel-addfuncs.h"
        # "eel2/nseel-caltab.c"
        # "eel2/nseel-cfunc.c"
        # "eel2/nseel-compiler.c"
        # "eel2/nseel-eval.c"
        # "eel2/ns-eel-func-ref.h"
        # "eel2/ns-eel-int.h"
        # "eel2/nseel-lextab.c"
        # "eel2/nseel-ram.c"
        # "eel2/nseel-yylex.c"
        # "eel2/y.tab.c"
        # "eel2/y.tab.h"
        # "fastqueue.h"
        # "ffmpeg.h"
        # "fft.c"
        # "fft.h"
        # "filebrowse.cpp"
        # "filebrowse.h"
        # "filename.h"
        # "fileread.h"
        # "filewrite.h"
        # "fnv64.h"
        # "giflib/config.h"
        # "giflib/dgif_lib.c"
        # "giflib/egif_lib.c"
        # "giflib/gif_hash.c"
        # "giflib/gif_hash.h"
        # "giflib/gif_lib.h"
        # "giflib/gif_lib_private.h"
        # "giflib/gifalloc.c"
        # "gpu/gpu.cpp"
        # "gpu/gpu.h"
        # "gpu/wglext.h"
        # "has_strings.h"
        "heapbuf.h"
        # "jnetlib/asyncdns.cpp"
        # "jnetlib/asyncdns.h"
        # "jnetlib/connection.cpp"
        # "jnetlib/connection.h"
        # "jnetlib/httpget.cpp"
        # "jnetlib/httpget.h"
        # "jnetlib/httpserv.cpp"
        # "jnetlib/httpserv.h"
        # "jnetlib/irc_util.h"
        # "jnetlib/jnetlib.h"
        # "jnetlib/listen.cpp"
        # "jnetlib/listen.h"
        # "jnetlib/netinc.h"
        # "jnetlib/test.cpp"
        # "jnetlib/testbnc.cpp"
        # "jnetlib/util.cpp"
        # "jnetlib/util.h"
        # "jnetlib/webserver.cpp"
        # "jnetlib/webserver.h"
        # "jpeglib/example.c"
        # "jpeglib/jcapimin.c"
        # "jpeglib/jcapistd.c"
        # "jpeglib/jccoefct.c"
        # "jpeglib/jccolor.c"
        # "jpeglib/jcdctmgr.c"
        # "jpeglib/jchuff.c"
        # "jpeglib/jchuff.h"
        # "jpeglib/jcinit.c"
        # "jpeglib/jcmainct.c"
        # "jpeglib/jcmarker.c"
        # "jpeglib/jcmaster.c"
        # "jpeglib/jcomapi.c"
        # "jpeglib/jconfig.h"
        # "jpeglib/jcparam.c"
        # "jpeglib/jcphuff.c"
        # "jpeglib/jcprepct.c"
        # "jpeglib/jcsample.c"
        # "jpeglib/jctrans.c"
        # "jpeglib/jdapimin.c"
        # "jpeglib/jdapistd.c"
        # "jpeglib/jdatadst.c"
        # "jpeglib/jdatasrc.c"
        # "jpeglib/jdcoefct.c"
        # "jpeglib/jdcolor.c"
        # "jpeglib/jdct.h"
        # "jpeglib/jddctmgr.c"
        # "jpeglib/jdhuff.c"
        # "jpeglib/jdhuff.h"
        # "jpeglib/jdinput.c"
        # "jpeglib/jdmainct.c"
        # "jpeglib/jdmarker.c"
        # "jpeglib/jdmaster.c"
        # "jpeglib/jdmerge.c"
        # "jpeglib/jdphuff.c"
        # "jpeglib/jdpostct.c"
        # "jpeglib/jdsample.c"
        # "jpeglib/jdtrans.c"
        # "jpeglib/jerror.c"
        # "jpeglib/jerror.h"
        # "jpeglib/jfdctflt.c"
        # "jpeglib/jfdctfst.c"
        # "jpeglib/jfdctint.c"
        # "jpeglib/jidctflt.c"
        # "jpeglib/jidctfst.c"
        # "jpeglib/jidctint.c"
        # "jpeglib/jidctred.c"
        # "jpeglib/jinclude.h"
        # "jpeglib/jmemmgr.c"
        # "jpeglib/jmemnobs.c"
        # "jpeglib/jmemsys.h"
        # "jpeglib/jmorecfg.h"
        # "jpeglib/jpegint.h"
        # "jpeglib/jpeglib.h"
        # "jpeglib/jquant1.c"
        # "jpeglib/jquant2.c"
        # "jpeglib/jutils.c"
        # "jpeglib/jversion.h"
        # "lameencdec.cpp"
        # "lameencdec.h"
        "libpng/png.c"
        "libpng/png.h"
        "libpng/pngconf.h"
        "libpng/pngdebug.h"
        "libpng/pngerror.c"
        "libpng/pngget.c"
        "libpng/pnginfo.h"
        "libpng/pnglibconf.h"
        "libpng/pngmem.c"
        "libpng/pngpread.c"
        "libpng/pngpriv.h"
        "libpng/pngread.c"
        "libpng/pngrio.c"
        "libpng/pngrtran.c"
        "libpng/pngrutil.c"
        "libpng/pngset.c"
        "libpng/pngstruct.h"
        "libpng/pngtest.c"
        "libpng/pngtrans.c"
        "libpng/pngwio.c"
        "libpng/pngwrite.c"
        "libpng/pngwtran.c"
        "libpng/pngwutil.c"
        # "lice/curverasterbuffer.h"
        # "lice/glew/include/GL/glew.h"
        # "lice/glew/include/GL/glxew.h"
        # "lice/glew/include/GL/wglew.h"
        # "lice/glew/include/GL/WGLEXT.H"
        # "lice/glew/src/glew.c"
        # "lice/glew/src/glewinfo.c"
        # "lice/glew/src/visualinfo.c"
        # "lice/lice.cpp"
        # "lice/lice.h"
        # "lice/lice_arc.cpp"
        # "lice/lice_bezier.h"
        # "lice/lice_bmp.cpp"
        # "lice/lice_colorspace.cpp"
        # "lice/lice_combine.h"
        # "lice/lice_extended.h"
        # "lice/lice_gif.cpp"
        # "lice/lice_gif_write.cpp"
        # "lice/lice_gl_ctx.cpp"
        # "lice/lice_gl_ctx.h"
        # "lice/lice_glbitmap.cpp"
        # "lice/lice_glbitmap.h"
        # "lice/lice_ico.cpp"
        # "lice/lice_image.cpp"
        # "lice/lice_import.h"
        # "lice/lice_jpg.cpp"
        # "lice/lice_jpg_write.cpp"
        # "lice/lice_lcf.cpp"
        # "lice/lice_lcf.h"
        # "lice/lice_line.cpp"
        # "lice/lice_lvg.cpp"
        # "lice/lice_palette.cpp"
        # "lice/lice_pcx.cpp"
        # "lice/lice_png.cpp"
        # "lice/lice_png_write.cpp"
        # "lice/lice_svg.cpp"
        # "lice/lice_texgen.cpp"
        # "lice/lice_text.cpp"
        # "lice/lice_text.h"
        # "lice/lice_textnew.cpp"
        # "lice/test/main.cpp"
        # "lineparse.h"
        # "localize/build_sample_langpack.cpp"
        # "localize/localize.cpp"
        # "localize/localize.h"
        # "localize/localize-import.h"
        # "localize/merge_langpacks.cpp"
        # "md5.c"
        # "md5.h"
        # "mergesort.h"
        # "MersenneTwister.h"
        # "mp3write.h"
        # "mutex.h"
        # "nsv/nsvbs.h"
        # "nsv/nsvlib.cpp"
        # "nsv/nsvlib.h"
        # "pcmfmtcvt.h"
        # "plush2/pl_cam.cpp"
        # "plush2/pl_make.cpp"
        # "plush2/pl_math.cpp"
        # "plush2/pl_obj.cpp"
        # "plush2/pl_pf_tex.h"
        # "plush2/pl_putface.cpp"
        # "plush2/pl_read_3ds.cpp"
        # "plush2/pl_read_cob.cpp"
        # "plush2/pl_read_jaw.cpp"
        # "plush2/pl_spline.cpp"
        # "plush2/plush.h"
        # "poollist.h"
        # "projectcontext.cpp"
        # "projectcontext.h"
        # "ptrlist.h"
        # "ptrlist_indexed.h"
        # "queue.h"
        # "reminder.h"
        # "resample.cpp"
        # "resample.h"
        # "rfb_client.cpp"
        # "rfb_client.h"
        # "rng.cpp"
        # "rng.h"
        # "rpool.h"
        # "scalafile.h"
        # "scsrc.cpp"
        # "scsrc.h"
        # "setthreadname.h"
        # "sha.cpp"
        # "sha.h"
        # "sharedpool.h"
        # "shm_connection.cpp"
        # "shm_connection.h"
        # "shm_msgreply.cpp"
        # "shm_msgreply.h"
        # "simple_pitchshift.h"
        # "simple_pitchshift2.h"
        # "sinewavegen.h"
        # "stringpool.h"

        "swell/commctrl.h"
        "swell/shlobj.h"
        "swell/swell.cpp"
        "swell/swell.h"
        "swell/swellappmain.h"
        "swell/swellappmain.mm"
        "swell/swell-appstub.mm"
        "swell/swell-appstub-generic.cpp"
        "swell/swell-dlg.mm"
        "swell/swell-dlggen.h"
        "swell/swell-dlg-generic.cpp"
        "swell/swell-functions.h"
        "swell/swell-gdi.mm"
        "swell/swell-gdi-generic.cpp"
        "swell/swell-gdi-internalpool.h"
        "swell/swell-gdi-lice.cpp"
        "swell/swell-generic-gdk.cpp"
        "swell/swell-generic-headless.cpp"
        "swell/swell-ini.cpp"
        "swell/swell-internal.h"
        "swell/swell-kb.mm"
        "swell/swell-kb-generic.cpp"
        "swell/swell-menu.mm"
        "swell/swell-menugen.h"
        "swell/swell-menu-generic.cpp"
        "swell/swell-misc.mm"
        "swell/swell-miscdlg.mm"
        "swell/swell-miscdlg-generic.cpp"
        "swell/swell-misc-generic.cpp"
        "swell/swell-modstub.mm"
        "swell/swell-modstub-generic.cpp"
        "swell/swell-types.h"
        "swell/swell-wnd.mm"
        "swell/swell-wnd-generic.cpp"
        "swell/test.cpp"
        "swell/windows.h"

        "time_precise.h"
        "timing.c"
        "timing.h"
        "tinyxml/libxml_tinyxml.cpp"
        "tinyxml/libxml_tinyxml.h"
        "tinyxml/svgtiny_colors.c"
        "tinyxml/tinystr.cpp"
        "tinyxml/tinystr.h"
        "tinyxml/tinyxml.cpp"
        "tinyxml/tinyxml.h"
        "tinyxml/tinyxmlerror.cpp"
        "tinyxml/tinyxmlparser.cpp"
        "verbengine.h"
        "vorbisencdec.h"
        "wavwrite.h"
        "wdl_base64.h"
        "wdlatomic.h"
        "wdlcstring.h"
        "wdlendian.h"
        "wdlstring.h"
        "wdltypes.h"
        "wdlutf8.h"

        # "win32_curses/curses.h"
        # "win32_curses/curses_editor.cpp"
        # "win32_curses/curses_editor.h"
        # "win32_curses/curses_win32.cpp"
        # "win32_curses/eel_edit.cpp"
        # "win32_curses/eel_edit.h"
        # "win32_curses/test.cpp"

        # "win32_helpers.h"
        # "win32_hidpi.h"
        # "win32_printf.h"
        # "win32_utf8.c"
        # "win32_utf8.h"

        # "win7filedialog.cpp"
        # "win7filedialog.h"
        # "wingui/dlgitemborder.h"
        # "wingui/membitmap.h"
        # "wingui/richeditctrl.h"
        # "wingui/scrollbar/coolscroll.cpp"
        # "wingui/scrollbar/coolscroll.h"
        # "wingui/virtwnd.cpp"
        # "wingui/virtwnd.h"
        # "wingui/virtwnd-controls.h"
        # "wingui/virtwnd-iaccessible.cpp"
        # "wingui/virtwnd-iconbutton.cpp"
        # "wingui/virtwnd-listbox.cpp"
        # "wingui/virtwnd-nsaccessibility.mm"
        # "wingui/virtwnd-skin.h"
        # "wingui/virtwnd-slider.cpp"
        # "wingui/wndsize.cpp"
        # "wingui/wndsize.h"
        # "xmlparse.h"
        # "xmlparse_test.cpp"
        # "xsrand.h"
        "zlib/adler32.c"
        "zlib/compress.c"
        "zlib/crc32.c"
        "zlib/crc32.h"
        "zlib/deflate.c"
        "zlib/deflate.h"
        "zlib/gzclose.c"
        "zlib/gzguts.h"
        "zlib/gzlib.c"
        "zlib/gzread.c"
        "zlib/gzwrite.c"
        "zlib/infback.c"
        "zlib/inffast.c"
        "zlib/inffast.h"
        "zlib/inffixed.h"
        "zlib/inflate.c"
        "zlib/inflate.h"
        "zlib/inftrees.c"
        "zlib/inftrees.h"
        "zlib/ioapi.c"
        "zlib/ioapi.h"
        "zlib/trees.c"
        "zlib/trees.h"
        "zlib/uncompr.c"
        "zlib/unzip.c"
        "zlib/unzip.h"
        "zlib/zconf.h"
        "zlib/zip.c"
        "zlib/zip.h"
        "zlib/zlib.h"
        "zlib/zlib_import.h"
        "zlib/zutil.c"
        "zlib/zutil.h"
)

if(NOT PLATFORM_MAC)
    _iplug_disable_source_compile(
        "swell/swell.cpp"
        "swell/swellappmain.mm"
        "swell/swell-appstub.mm"
        "swell/swell-appstub-generic.cpp"
        "swell/swell-dlg.mm"
        "swell/swell-dlg-generic.cpp"
        "swell/swell-gdi.mm"
        "swell/swell-gdi-generic.cpp"
        "swell/swell-gdi-lice.cpp"
        "swell/swell-generic-gdk.cpp"
        "swell/swell-generic-headless.cpp"
        "swell/swell-ini.cpp"
        "swell/swell-kb.mm"
        "swell/swell-kb-generic.cpp"
        "swell/swell-menu.mm"
        "swell/swell-menu-generic.cpp"
        "swell/swell-misc.mm"
        "swell/swell-miscdlg.mm"
        "swell/swell-miscdlg-generic.cpp"
        "swell/swell-misc-generic.cpp"
        "swell/swell-modstub.mm"
        "swell/swell-modstub-generic.cpp"
        "swell/swell-wnd.mm"
        "swell/swell-wnd-generic.cpp"
        "swell/test.cpp"
    )
endif()


get_target_property(SOURCE_LIST WDL SOURCES)
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${SOURCE_LIST})
set_target_properties(WDL PROPERTIES FOLDER "Libraries")
