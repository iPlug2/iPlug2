parameters:
  name: ''
  path: ''
  graphics: 'NANOVG'
  target: ''
  artifactName: ''
  srcRepo: 'none' # the git repository to clone into path/name for building
  srcBranch: 'master' # the branch to clone for building
  justApp: false

  #WEB AUDIO MODULE publishing via git
  publishRepo: 'none' # the git repository to publish the WAM to
  publishBranch: gh-pages # the branch to publish the WAM to
  publishOrigin: '' # the origin URL where the WAM will be hosted. NOTE: should end with / 
  user: '' # the git username to commit with when publishing
  email: '' # the git email address to commit with when publishing

steps:
  - bash: |
      if [ ${{ parameters.srcRepo }} != none ]
      then
        if [ ! -d ./${{ parameters.path }} ]
        then
          mkdir -p ./${{ parameters.path }}
        fi
        cd ./${{ parameters.path }}
        git clone --recursive -b ${{ parameters.srcBranch }} ${{ parameters.srcRepo }} ${{ parameters.name }}
      else
        echo no remote repo argument supplied, building local project ${{ parameters.path }}/${{ parameters.name }} ... 
      fi
    env:
      GITHUB_PAT: $(GITHUB_PAT)
    displayName: (Optionally) clone ${{ parameters.name }} repo
  
  - bash: |
      graphics=${{ parameters.graphics }}
      if [ $graphics = "CANVAS" ]
      then
        cd ./${{ parameters.path }}/${{ parameters.name }}/config
        sed -i.bu 's/-DIGRAPHICS_NANOVG -DIGRAPHICS_GLES2/-DIGRAPHICS_CANVAS/' ${{ parameters.name }}-web.mk
        sed -i.bu 's/WEB_LDFLAGS += $(NANOVG_LDFLAGS)/\/\/WEB_LDFLAGS += $(NANOVG_LDFLAGS)/' ${{ parameters.name }}-web.mk
      fi
    displayName: Set graphics string to ${{ parameters.graphics }}

  - bash: |
      cd emsdk
      source ./emsdk_env.sh
      cd ..
      cd ./${{ parameters.path }}/${{ parameters.name }}/scripts
      chmod +x *.sh # in case executable bit was lost (e.g. project duplicated on windows)
      ./makedist-web.sh off
    displayName: Compile ${{ parameters.name }} WAM

  # - bash: |
  #     mkdir -p ${{ parameters.path }}/${{ parameters.name }}/build-web/
  #     echo "hello ${{ parameters.graphics }}" > ${{ parameters.path }}/${{ parameters.name }}/build-web/${{ parameters.graphics }}.txt
  #   displayName: TEST PAYLOAD

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'WEB_${{ parameters.artifactName }}'
      targetPath: '${{ parameters.path }}/${{ parameters.name }}/build-web'
    displayName: Publish ${{ parameters.name }} WAM

  - bash: |
      if [ ${{ parameters.publishRepo }} != none ]
      then
        #build again with origin - this is overkill, just to customise the origin in awn script
        cd emsdk
        source ./emsdk_env.sh
        cd ..
        cd ./${{ parameters.path }}/${{ parameters.name }}/scripts
        ./makedist-web.sh off ${{ parameters.publishOrigin }}
        # --

        cd ..
        mv ./build-web/* $BUILD_ARTIFACTSTAGINGDIRECTORY
        cd $BUILD_SOURCESDIRECTORY
        rm -r *
        git clone --recursive -b ${{ parameters.publishBranch }} ${{ parameters.publishRepo }} ${{ parameters.name }}
        cd ${{ parameters.name }}
        rm -r scripts
        mv $BUILD_ARTIFACTSTAGINGDIRECTORY/* .
        git config user.email ${{ parameters.email }}
        git config user.name ${{ parameters.user }}
        git add *
        git commit -m "publish ${{ parameters.name }}"
        git push origin ${{ parameters.publishBranch }}
      fi
    env:
      GITHUB_PAT: $(GITHUB_PAT)
    displayName: (Optionally) Publish ${{ parameters.name }} WAM to github pages

  