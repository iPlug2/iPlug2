// this is used for macOS Developer ID / Appstore code-signing
CERTIFICATE_ID = Oliver Larkin

// Which compiler to use
//COMPILER = com.intel.compilers.icc.12_1_0
COMPILER = com.apple.compilers.llvm.clang.1_0

// which osx sdk to compile against - defaults to latest SDK available
BASE_SDK_MAC = macosx // latest SDK

CLANG_CXX_LANGUAGE_STANDARD = c++11
CLANG_CXX_LIBRARY = libc++

// the minimum OS to support
MACOSX_DEPLOYMENT_TARGET = 10.11

SHARED_PRECOMPS_DIR = $(TARGET_BUILD_DIR)/PCH

// BUILD SETTINGS TO ENABLE DIFFERENT PREPROCESSOR MACROS, INCLUDE PATHS AND FUNCIONALITY-------------------------------

// ***** PREPROCESSOR MACROS

// macros for all debug/release/tracer builds
DEBUG_DEFS = DEVELOPMENT=1 DEBUG=1 _DEBUG
RELEASE_DEFS = RELEASE=1 NDEBUG=1
TRACER_DEFS = $DEBUG_DEFS TRACER_BUILD // here you can change if a TRACER build is a DEBUG or RELEASE build

// macros for individual plug-in format builds etc
ALL_DEFS = NOMINMAX 
PLUGIN_DEFS = SWELL_CLEANUP_ON_UNLOAD // macros for all plug-in builds
VST2_DEFS = VST2_API $PLUGIN_DEFS IPLUG_EDITOR=1 IPLUG_DSP=1
VST3_DEFS = VST3_API $PLUGIN_DEFS IPLUG_EDITOR=1 IPLUG_DSP=1
VST3C_DEFS = VST3C_API $PLUGIN_DEFS IPLUG_EDITOR=1 IPLUG_DSP=0
VST3P_DEFS = VST3P_API $PLUGIN_DEFS IPLUG_EDITOR=0 IPLUG_DSP=1 //NO_IGRAPHICS
AU_DEFS = AU_API $PLUGIN_DEFS IPLUG_EDITOR=1 IPLUG_DSP=1
AUv3_DEFS = AUv3_API $PLUGIN_DEFS IPLUG_EDITOR=1 IPLUG_DSP=1
AAX_DEFS = AAX_API $PLUGIN_DEFS IPLUG_EDITOR=1 IPLUG_DSP=1
APP_DEFS = APP_API __MACOSX_CORE__ IPLUG_EDITOR=1 IPLUG_DSP=1 SWELL_COMPILED// __UNIX_JACK__

// ***** HEADER INCLUDE PATHS
// Where the SDKs etc. are located in relation to the plug-in Xcode project (which is in the projects subfolder of an IPlug project)

// the top level iPlug2 folder e.g. where this common-mac.xcconfig is
ROOT = $(SRCROOT)/../../..
PROJECT_ROOT = $(SRCROOT)/..

PKGMAN_PATH = /usr/local

DEPS_PATH = $(ROOT)/Dependencies

// if you want to use the homebrew or macports package managers, rather than building static libraries yourself (not advised) you can modify the BUILT_LIBS_PATH build setting to point to PKGMAN_PATH
BUILT_LIBS_PATH = $(DEPS_PATH)/Build/mac
BUILT_LIBS_INC_PATH = $(BUILT_LIBS_PATH)/include
BUILT_LIBS_LIB_PATH = $(BUILT_LIBS_PATH)/lib

// IPlug dependencies
SCRIPTS_PATH = $(ROOT)/Scripts
WDL_PATH = $(ROOT)/WDL
SWELL_PATH = $(WDL_PATH)/swell
IPLUG_PATH = $(ROOT)/IPlug
RTAUDIO_PATH = $(DEPS_PATH)/IPlug/RTAudio
RTMIDI_PATH = $(DEPS_PATH)/IPlug/RTMidi

EXTRAS_PATH = $(IPLUG_PATH)/Extras
JSON11_PATH = $(DEPS_PATH)/Extras/json11
YOGA_PATH = $(DEPS_PATH)/IGraphics/yoga/yoga
PUGL_PATH = $(DEPS_PATH)/Extras/pugl

//faust is linked as a dynamic library
FAUST_LIB_PATHS = $(BUILT_LIBS_LIB_PATH)
FAUST_INC_PATHS = $(BUILT_LIBS_INC_PATH) $(WDL_PATH)/win32_curses
FAUST_DEFS = SWELL_COMPILED FORCE_WIN32_CURSES FAUST_EXE=\"$(BUILT_LIBS_PATH)/bin/faust\" DEFAULT_FAUST_LIBRARY_PATH=\"$(BUILT_LIBS_PATH)/share/faust\"
FAUST_LNK_FLAGS = $(BUILT_LIBS_LIB_PATH)/libfaust.dylib

CIVETWEB_INC_PATHS = $(BUILT_LIBS_INC_PATH)
CIVETWEB_LNK_FLAGS = $(BUILT_LIBS_LIB_PATH)/libcivetweb.a

EXTRAS_INC_PATHS = $(EXTRAS_PATH) $(EXTRAS_PATH)/Synth $(EXTRAS_PATH)/Faust $(EXTRAS_PATH)/OSC $(EXTRAS_PATH)/HIIR $(EXTRAS_PATH)/WebSocket $(CIVETWEB_PATH) $(JSON11_PATH) $(RTAUDIO_PATH) $(RTMIDI_PATH)

// Plug-in SDK paths
VST2_SDK = $(DEPS_PATH)/IPlug/VST2_SDK
VST3_SDK = $(DEPS_PATH)/IPlug/VST3_SDK
AAX_SDK = $(DEPS_PATH)/IPlug/AAX_SDK
REAPER_SDK = $(DEPS_PATH)/IPlug/Reaper

// this build setting is included at the xcode project level, since we need all these include paths
IPLUG_INC_PATHS = $(PROJECT_ROOT) $(WDL_PATH) $(SWELL_PATH) $(IPLUG_PATH) $(EXTRAS_INC_PATHS)

IGRAPHICS_PATH = $(ROOT)/IGraphics

// IGraphics dependencies
IGRAPHICS_DEPS_PATH = $(DEPS_PATH)/IGraphics
LICE_PATH = $(WDL_PATH)/lice
NSVG_PATH = $(IGRAPHICS_DEPS_PATH)/NanoSVG/src
NVG_PATH = $(IGRAPHICS_DEPS_PATH)/NanoVG/src
NVGMTL_PATH = $(IGRAPHICS_DEPS_PATH)/MetalNanoVG/src
AGG_PATH = $(IGRAPHICS_DEPS_PATH)/AGG
STB_PATH = $(DEPS_PATH)/IGraphics/STB

FT_PATH = $(BUILT_LIBS_INC_PATH)/freetype2
//HB_PATH = /usr/local/Cellar/harfbuzz/1.8.7/include/harfbuzz
// you can optionally include this build setting, by adding it to EXTRA_INC_PATHS in MyProject.xcconfig in order to get all varieties of IGraphics support
IGRAPHICS_INC_PATHS = $(IGRAPHICS_PATH) $(IGRAPHICS_PATH)/Controls $(IGRAPHICS_PATH)/Platforms $(IGRAPHICS_PATH)/Drawing $(LICE_PATH) $(NSVG_PATH) $(NVG_PATH) $(NVGMTL_PATH) $(AGG_PATH) $(BUILT_LIBS_INC_PATH) $(FT_PATH) $(STB_PATH)//$(HB_PATH)

// *****  LINKER/LIBRARY INCLUDE PATHS AND LINKER FLAGS

//Static library Paths - on macOS we need to supply an absolute path to the static library, otherwise it will pick up a dynamic library with the same name
LIB_CAIRO = $(BUILT_LIBS_LIB_PATH)/libcairo.a
LIB_FT = $(BUILT_LIBS_LIB_PATH)/libfreetype.a
LIB_PIXMAN = $(BUILT_LIBS_LIB_PATH)/libpixman-1.a
LIB_PNG = $(BUILT_LIBS_LIB_PATH)/libpng.a
//LIB_FC = $(BUILT_LIBS_LIB_PATH)/libfontconfig.a
//LIB_BZ = $(BUILT_LIBS_LIB_PATH)/libbz2.a
//LIB_EX = $(BUILT_LIBS_LIB_PATH)/libexpat.a
LIB_Z = $(BUILT_LIBS_LIB_PATH)/libz.a
LIB_CIVET = $(BUILT_LIBS_LIB_PATH)/libcivetweb.a
//LIB_HB = /usr/local/Cellar/harfbuzz/1.8.7/lib/libharfbuzz.a
//LIB_HB_ICU = /usr/local/Cellar/harfbuzz/1.8.7/lib/libharfbuzz-icu.a
//LIB_GF = /usr/local/Cellar/graphite2/1.3.10/lib/libgraphite2.dylib

// you can optionally include this build setting, by adding it to EXTRA_LIB_PATHS, in order to get all varieties of IGraphics support
IGRAPHICS_LNK_FLAGS = $(LIB_CAIRO) $(LIB_FT) $(LIB_PIXMAN) $(LIB_PNG) $(LIB_Z) //$(LIB_HB) $(LIB_HB_ICU) $(LIB_GF)

ALL_FRAMEWORKS = -framework Cocoa -framework Carbon -framework CoreFoundation -framework CoreData -framework Foundation -framework CoreServices -framework Metal -framework QuartzCore -framework WebKit -framework OpenGL
APP_FRAMEWORKS = -framework AppKit -framework CoreMidi -framework CoreAudio
AU_FRAMEWORKS = -framework AudioToolbox -framework AudioUnit -framework CoreAudio -framework CoreMidi
AUv3_FRAMEWORKS = -framework AudioToolbox -framework AVFoundation -framework CoreAudio -framework CoreAudioKit


// ***** BINARY OUTPUT LOCATIONS ------------------------------------------------------------------------------------------------------------------------

// Where to build the plug-ins / app bundles ...
// By default iPlug2 builds to user plug-in folder
// You can also build to the system plug-in folder, but you will need to explicitly add write permissions to build stuff there
// The AAX folder should be the location of the PT Dev build plug-ins folder, installer scripts will copy to the non-developer build

VST2_PATH = $(HOME)/Library/Audio/Plug-Ins/VST
VST3_PATH = $(HOME)/Library/Audio/Plug-Ins/VST3
AU_PATH = $(HOME)/Library/Audio/Plug-Ins/Components
AAX_PATH = /Applications/Avid/ProTools_3PDev/Plug-Ins
APP_PATH = $(HOME)/Applications
REAPER_EXT_PATH = $(HOME)/Library/Application Support/REAPER/UserPlugins

