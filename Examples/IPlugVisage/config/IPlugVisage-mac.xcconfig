
// IPLUG2_ROOT should point to the top level IPLUG2 folder
// By default, that is three directories up from /Examples/IPlugVisage/config
// If you want to build your project "out of source", you can change IPLUG2_ROOT and the path to common-mac.xcconfig

IPLUG2_ROOT = ../../..

#include "../../../common-mac.xcconfig"

//------------------------------
// Global build settings

// the basename of the vst, vst3, app, component, aaxplugin
BINARY_NAME = IPlugVisage

// ------------------------------
// HEADER AND LIBRARY SEARCH PATHS
EXTRA_INC_PATHS = $(IGRAPHICS_INC_PATHS) $(PROJECT_ROOT)/visage/build/include $(PROJECT_ROOT)/visage/ $(PROJECT_ROOT)/visage/visage_file_embed $(PROJECT_ROOT)/visage/build/examples/EmbeddedShaderResources_generated $(PROJECT_ROOT)/visage/build/examples/EmbeddedFontResources_generated $(PROJECT_ROOT)/visage/build/examples/EmbeddedIconResources_generated $(PROJECT_ROOT)/visage/build/examples/EmbeddedImageResources_generated
EXTRA_LIB_PATHS = $(IGRAPHICS_LIB_PATHS)
EXTRA_LNK_FLAGS = -framework Metal -framework MetalKit -framework IOKit $(PROJECT_ROOT)/visage/build/libvisage.a $(PROJECT_ROOT)/visage/build/_deps/bgfx-build/cmake/bgfx/libbgfx.a $(PROJECT_ROOT)/visage/build/_deps/bgfx-build/cmake/bimg/libbimg.a $(PROJECT_ROOT)/visage/build/_deps/bgfx-build/cmake/bimg/libbimg_encode.a $(PROJECT_ROOT)/visage/build/_deps/bgfx-build/cmake/bimg/libbimg_decode.a $(PROJECT_ROOT)/visage/build/_deps/bgfx-build/cmake/bx/libbx.a $(PROJECT_ROOT)/visage/build/_deps/freetype-build/libfreetype.a $(PROJECT_ROOT)/visage/build/visage_graphics/libVisageEmbeddedShaders.a $(PROJECT_ROOT)/visage/build/visage_graphics/libVisageEmbeddedFonts.a $(PROJECT_ROOT)/visage/build/visage_graphics/libVisageEmbeddedIcons.a $(PROJECT_ROOT)/visage/build/visage_graphics/third_party/nanosvg/libnanosvg.a $(PROJECT_ROOT)/visage/build/visage_graphics/third_party/nanosvg/libnanosvgrast.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedIconResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedFontResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedShaderResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedImageResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedFontResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedIconResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedImageResources.a $(PROJECT_ROOT)/visage/build/examples/libEmbeddedShaderResources.a

// EXTRA_APP_DEFS =
// EXTRA_PLUGIN_DEFS =

//------------------------------
// PREPROCESSOR MACROS
EXTRA_ALL_DEFS = OBJC_PREFIX=vIPlugVisage SWELL_APP_PREFIX=Swell_vIPlugVisage NO_IGRAPHICS SHADERS_FOLDER="\"$(PROJECT_ROOT)/visage/examples/shaders\""
//EXTRA_DEBUG_DEFS =
//EXTRA_RELEASE_DEFS =
//EXTRA_TRACER_DEFS =

//------------------------------
// RELEASE BUILD OPTIONS

//Enable/Disable Profiling code
PROFILE = NO //NO, YES - enable this if you want to use instruments to profile a plugin

// Optimization level -
// None: [-O0] Fast: [-O, -O1] Faster:[-O2] Fastest: [-O3] Fastest, smallest: Optimize for size. [-Os]
RELEASE_OPTIMIZE = 3 //0,1,2,3,s

//------------------------------
// DEBUG BUILD OPTIONS
DEBUG_OPTIMIZE = 0 //0,1,2,3,s

//------------------------------
// MISCELLANEOUS COMPILER OPTIONS

//ARCHS = $(ARCHS_STANDARD_32_64_BIT)
ARCHS = $(ARCHS_STANDARD_64_BIT)

GCC_INCREASE_PRECOMPILED_HEADER_SHARING = NO

// Flags to pass to compiler for all builds
GCC_CFLAGS[arch=x86_64] = -Wno-write-strings -mfpmath=sse -msse -msse2 -msse3 //-mavx

// Uncomment to enable relaxed IEEE compliance
//GCC_FAST_MATH = YES

// uncomment this to enable codesigning - necessary for AUv3 delivery
CODE_SIGN_IDENTITY=//Mac Developer

MACOSX_DEPLOYMENT_TARGET = 10.15
